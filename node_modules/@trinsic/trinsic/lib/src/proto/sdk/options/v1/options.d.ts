import _m0 from "protobufjs/minimal";
/** Configuration for Trinsic SDK Services */
export interface ServiceOptions {
    /** Trinsic API endpoint. Defaults to `prod.trinsic.cloud` */
    serverEndpoint: string;
    /** Trinsic API port; defaults to `443` */
    serverPort: number;
    /** Whether TLS is enabled between SDK and Trinsic API; defaults to `true` */
    serverUseTls: boolean;
    /** Authentication token for SDK calls; defaults to empty string (unauthenticated) */
    authToken: string;
}
export declare const ServiceOptions: {
    encode(message: ServiceOptions, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ServiceOptions;
    fromJSON(object: any): ServiceOptions;
    toJSON(message: ServiceOptions): unknown;
    fromPartial(object: DeepPartial<ServiceOptions>): ServiceOptions;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
