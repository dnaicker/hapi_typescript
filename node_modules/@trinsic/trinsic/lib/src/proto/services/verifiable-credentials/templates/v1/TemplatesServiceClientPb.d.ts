/**
 * @fileoverview gRPC-Web generated client stub for services.verifiablecredentials.templates.v1
 * @enhanceable
 * @public
 */
import * as grpcWeb from "grpc-web";
import * as services_verifiable$credentials_templates_v1_templates_pb from "../../../../services/verifiable-credentials/templates/v1/templates_pb";
export declare class CredentialTemplatesClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoCreate: any;
    create(request: services_verifiable$credentials_templates_v1_templates_pb.CreateCredentialTemplateRequest, metadata: grpcWeb.Metadata | null): Promise<services_verifiable$credentials_templates_v1_templates_pb.CreateCredentialTemplateResponse>;
    create(request: services_verifiable$credentials_templates_v1_templates_pb.CreateCredentialTemplateRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_verifiable$credentials_templates_v1_templates_pb.CreateCredentialTemplateResponse) => void): grpcWeb.ClientReadableStream<services_verifiable$credentials_templates_v1_templates_pb.CreateCredentialTemplateResponse>;
    methodInfoGet: any;
    get(request: services_verifiable$credentials_templates_v1_templates_pb.GetCredentialTemplateRequest, metadata: grpcWeb.Metadata | null): Promise<services_verifiable$credentials_templates_v1_templates_pb.GetCredentialTemplateResponse>;
    get(request: services_verifiable$credentials_templates_v1_templates_pb.GetCredentialTemplateRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_verifiable$credentials_templates_v1_templates_pb.GetCredentialTemplateResponse) => void): grpcWeb.ClientReadableStream<services_verifiable$credentials_templates_v1_templates_pb.GetCredentialTemplateResponse>;
    methodInfoList: any;
    list(request: services_verifiable$credentials_templates_v1_templates_pb.ListCredentialTemplatesRequest, metadata: grpcWeb.Metadata | null): Promise<services_verifiable$credentials_templates_v1_templates_pb.ListCredentialTemplatesResponse>;
    list(request: services_verifiable$credentials_templates_v1_templates_pb.ListCredentialTemplatesRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_verifiable$credentials_templates_v1_templates_pb.ListCredentialTemplatesResponse) => void): grpcWeb.ClientReadableStream<services_verifiable$credentials_templates_v1_templates_pb.ListCredentialTemplatesResponse>;
    methodInfoSearch: any;
    search(request: services_verifiable$credentials_templates_v1_templates_pb.SearchCredentialTemplatesRequest, metadata: grpcWeb.Metadata | null): Promise<services_verifiable$credentials_templates_v1_templates_pb.SearchCredentialTemplatesResponse>;
    search(request: services_verifiable$credentials_templates_v1_templates_pb.SearchCredentialTemplatesRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_verifiable$credentials_templates_v1_templates_pb.SearchCredentialTemplatesResponse) => void): grpcWeb.ClientReadableStream<services_verifiable$credentials_templates_v1_templates_pb.SearchCredentialTemplatesResponse>;
    methodInfoDelete: any;
    delete(request: services_verifiable$credentials_templates_v1_templates_pb.DeleteCredentialTemplateRequest, metadata: grpcWeb.Metadata | null): Promise<services_verifiable$credentials_templates_v1_templates_pb.DeleteCredentialTemplateResponse>;
    delete(request: services_verifiable$credentials_templates_v1_templates_pb.DeleteCredentialTemplateRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_verifiable$credentials_templates_v1_templates_pb.DeleteCredentialTemplateResponse) => void): grpcWeb.ClientReadableStream<services_verifiable$credentials_templates_v1_templates_pb.DeleteCredentialTemplateResponse>;
}
