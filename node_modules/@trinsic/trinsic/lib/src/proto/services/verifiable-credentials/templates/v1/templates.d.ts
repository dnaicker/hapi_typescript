import _m0 from "protobufjs/minimal";
/** Valid types for credential fields */
export declare enum FieldType {
    STRING = 0,
    NUMBER = 1,
    BOOL = 2,
    DATETIME = 4,
    UNRECOGNIZED = -1
}
export declare function fieldTypeFromJSON(object: any): FieldType;
export declare function fieldTypeToJSON(object: FieldType): string;
/** Request to fetch a template by ID */
export interface GetCredentialTemplateRequest {
    /** ID of template to fetch */
    id: string;
}
/** Response to `GetCredentialTemplateRequest` */
export interface GetCredentialTemplateResponse {
    /** Template fetched by ID */
    template: TemplateData | undefined;
}
/** Request to search templates using a SQL query */
export interface SearchCredentialTemplatesRequest {
    /** SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'` */
    query: string;
    /**
     * Token provided by previous `SearchCredentialTemplatesResponse`
     * if more data is available for query
     */
    continuationToken: string;
}
/** Response to `SearchCredentialTemplatesRequest` */
export interface SearchCredentialTemplatesResponse {
    /** Raw JSON data returned from query */
    itemsJson: string;
    /** Whether more results are available for this query via `continuation_token` */
    hasMore: boolean;
    /** Token to fetch next set of results via `SearchCredentialTemplatesRequest` */
    continuationToken: string;
}
/** Request to list templates using a SQL query */
export interface ListCredentialTemplatesRequest {
    /** SQL query to execute. Example: `SELECT * FROM c WHERE c.name = 'Diploma'` */
    query: string;
    /**
     * Token provided by previous `ListCredentialTemplatesResponse`
     * if more data is available for query
     */
    continuationToken: string;
}
/** Response to `ListCredentialTemplatesRequest` */
export interface ListCredentialTemplatesResponse {
    /** Templates found by query */
    templates: TemplateData[];
    /** Whether more results are available for this query via `continuation_token` */
    hasMoreResults: boolean;
    /** Token to fetch next set of resuts via `ListCredentialTemplatesRequest` */
    continuationToken: string;
}
/** Request to delete a template by ID */
export interface DeleteCredentialTemplateRequest {
    /** ID of template to delete */
    id: string;
}
/** Response to `DeleteCredentialTemplateRequest` */
export interface DeleteCredentialTemplateResponse {
}
/** Request to create a new template */
export interface CreateCredentialTemplateRequest {
    /** Name of new template */
    name: string;
    /** Fields which compose the template */
    fields: {
        [key: string]: TemplateField;
    };
    /**
     * Whether credentials may be issued against this template which have fields
     * not specified in `fields`
     */
    allowAdditionalFields: boolean;
}
export interface CreateCredentialTemplateRequest_FieldsEntry {
    key: string;
    value: TemplateField | undefined;
}
/** Response to `CreateCredentialTemplateRequest` */
export interface CreateCredentialTemplateResponse {
    /** Created template */
    data: TemplateData | undefined;
}
/** A field defined in a template */
export interface TemplateField {
    /** Human-readable description of the field */
    description: string;
    /** Whether this field may be omitted when a credential is issued against the template */
    optional: boolean;
    /** The type of the field */
    type: FieldType;
}
/** Unused */
export interface GetTemplateRequest {
    id: string;
}
/** Unused */
export interface GetTemplateResponse {
    data: TemplateData | undefined;
}
/** Unused */
export interface ListTemplatesRequest {
}
/** Unused */
export interface ListTemplatesResponse {
    templates: TemplateData[];
}
/** Credential Template */
export interface TemplateData {
    /** Template ID */
    id: string;
    /** Template name */
    name: string;
    /** Template version number */
    version: number;
    /** Fields defined for the template */
    fields: {
        [key: string]: TemplateField;
    };
    /**
     * Whether credentials issued against this template may
     * contain fields not defined by template
     */
    allowAdditionalFields: boolean;
    /** URI pointing to template JSON schema document */
    schemaUri: string;
    /** URI pointing to template JSON-LD context document */
    contextUri: string;
    /** ID of ecosystem in which template resides */
    ecosystemId: string;
    /** Template type (`VerifiableCredential`) */
    type: string;
    /** ID of template creator */
    createdBy: string;
    /** Date when template was created as ISO 8601 utc string */
    dateCreated: string;
}
export interface TemplateData_FieldsEntry {
    key: string;
    value: TemplateField | undefined;
}
export declare const GetCredentialTemplateRequest: {
    encode(message: GetCredentialTemplateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCredentialTemplateRequest;
    fromJSON(object: any): GetCredentialTemplateRequest;
    toJSON(message: GetCredentialTemplateRequest): unknown;
    fromPartial(object: DeepPartial<GetCredentialTemplateRequest>): GetCredentialTemplateRequest;
};
export declare const GetCredentialTemplateResponse: {
    encode(message: GetCredentialTemplateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetCredentialTemplateResponse;
    fromJSON(object: any): GetCredentialTemplateResponse;
    toJSON(message: GetCredentialTemplateResponse): unknown;
    fromPartial(object: DeepPartial<GetCredentialTemplateResponse>): GetCredentialTemplateResponse;
};
export declare const SearchCredentialTemplatesRequest: {
    encode(message: SearchCredentialTemplatesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SearchCredentialTemplatesRequest;
    fromJSON(object: any): SearchCredentialTemplatesRequest;
    toJSON(message: SearchCredentialTemplatesRequest): unknown;
    fromPartial(object: DeepPartial<SearchCredentialTemplatesRequest>): SearchCredentialTemplatesRequest;
};
export declare const SearchCredentialTemplatesResponse: {
    encode(message: SearchCredentialTemplatesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): SearchCredentialTemplatesResponse;
    fromJSON(object: any): SearchCredentialTemplatesResponse;
    toJSON(message: SearchCredentialTemplatesResponse): unknown;
    fromPartial(object: DeepPartial<SearchCredentialTemplatesResponse>): SearchCredentialTemplatesResponse;
};
export declare const ListCredentialTemplatesRequest: {
    encode(message: ListCredentialTemplatesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ListCredentialTemplatesRequest;
    fromJSON(object: any): ListCredentialTemplatesRequest;
    toJSON(message: ListCredentialTemplatesRequest): unknown;
    fromPartial(object: DeepPartial<ListCredentialTemplatesRequest>): ListCredentialTemplatesRequest;
};
export declare const ListCredentialTemplatesResponse: {
    encode(message: ListCredentialTemplatesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ListCredentialTemplatesResponse;
    fromJSON(object: any): ListCredentialTemplatesResponse;
    toJSON(message: ListCredentialTemplatesResponse): unknown;
    fromPartial(object: DeepPartial<ListCredentialTemplatesResponse>): ListCredentialTemplatesResponse;
};
export declare const DeleteCredentialTemplateRequest: {
    encode(message: DeleteCredentialTemplateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteCredentialTemplateRequest;
    fromJSON(object: any): DeleteCredentialTemplateRequest;
    toJSON(message: DeleteCredentialTemplateRequest): unknown;
    fromPartial(object: DeepPartial<DeleteCredentialTemplateRequest>): DeleteCredentialTemplateRequest;
};
export declare const DeleteCredentialTemplateResponse: {
    encode(_: DeleteCredentialTemplateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): DeleteCredentialTemplateResponse;
    fromJSON(_: any): DeleteCredentialTemplateResponse;
    toJSON(_: DeleteCredentialTemplateResponse): unknown;
    fromPartial(_: DeepPartial<DeleteCredentialTemplateResponse>): DeleteCredentialTemplateResponse;
};
export declare const CreateCredentialTemplateRequest: {
    encode(message: CreateCredentialTemplateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateCredentialTemplateRequest;
    fromJSON(object: any): CreateCredentialTemplateRequest;
    toJSON(message: CreateCredentialTemplateRequest): unknown;
    fromPartial(object: DeepPartial<CreateCredentialTemplateRequest>): CreateCredentialTemplateRequest;
};
export declare const CreateCredentialTemplateRequest_FieldsEntry: {
    encode(message: CreateCredentialTemplateRequest_FieldsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateCredentialTemplateRequest_FieldsEntry;
    fromJSON(object: any): CreateCredentialTemplateRequest_FieldsEntry;
    toJSON(message: CreateCredentialTemplateRequest_FieldsEntry): unknown;
    fromPartial(object: DeepPartial<CreateCredentialTemplateRequest_FieldsEntry>): CreateCredentialTemplateRequest_FieldsEntry;
};
export declare const CreateCredentialTemplateResponse: {
    encode(message: CreateCredentialTemplateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): CreateCredentialTemplateResponse;
    fromJSON(object: any): CreateCredentialTemplateResponse;
    toJSON(message: CreateCredentialTemplateResponse): unknown;
    fromPartial(object: DeepPartial<CreateCredentialTemplateResponse>): CreateCredentialTemplateResponse;
};
export declare const TemplateField: {
    encode(message: TemplateField, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TemplateField;
    fromJSON(object: any): TemplateField;
    toJSON(message: TemplateField): unknown;
    fromPartial(object: DeepPartial<TemplateField>): TemplateField;
};
export declare const GetTemplateRequest: {
    encode(message: GetTemplateRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetTemplateRequest;
    fromJSON(object: any): GetTemplateRequest;
    toJSON(message: GetTemplateRequest): unknown;
    fromPartial(object: DeepPartial<GetTemplateRequest>): GetTemplateRequest;
};
export declare const GetTemplateResponse: {
    encode(message: GetTemplateResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): GetTemplateResponse;
    fromJSON(object: any): GetTemplateResponse;
    toJSON(message: GetTemplateResponse): unknown;
    fromPartial(object: DeepPartial<GetTemplateResponse>): GetTemplateResponse;
};
export declare const ListTemplatesRequest: {
    encode(_: ListTemplatesRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ListTemplatesRequest;
    fromJSON(_: any): ListTemplatesRequest;
    toJSON(_: ListTemplatesRequest): unknown;
    fromPartial(_: DeepPartial<ListTemplatesRequest>): ListTemplatesRequest;
};
export declare const ListTemplatesResponse: {
    encode(message: ListTemplatesResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): ListTemplatesResponse;
    fromJSON(object: any): ListTemplatesResponse;
    toJSON(message: ListTemplatesResponse): unknown;
    fromPartial(object: DeepPartial<ListTemplatesResponse>): ListTemplatesResponse;
};
export declare const TemplateData: {
    encode(message: TemplateData, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TemplateData;
    fromJSON(object: any): TemplateData;
    toJSON(message: TemplateData): unknown;
    fromPartial(object: DeepPartial<TemplateData>): TemplateData;
};
export declare const TemplateData_FieldsEntry: {
    encode(message: TemplateData_FieldsEntry, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): TemplateData_FieldsEntry;
    fromJSON(object: any): TemplateData_FieldsEntry;
    toJSON(message: TemplateData_FieldsEntry): unknown;
    fromPartial(object: DeepPartial<TemplateData_FieldsEntry>): TemplateData_FieldsEntry;
};
export declare type CredentialTemplatesDefinition = typeof CredentialTemplatesDefinition;
export declare const CredentialTemplatesDefinition: {
    readonly name: "CredentialTemplates";
    readonly fullName: "services.verifiablecredentials.templates.v1.CredentialTemplates";
    readonly methods: {
        /** Create a credential template in the current ecosystem */
        readonly create: {
            readonly name: "Create";
            readonly requestType: {
                encode(message: CreateCredentialTemplateRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): CreateCredentialTemplateRequest;
                fromJSON(object: any): CreateCredentialTemplateRequest;
                toJSON(message: CreateCredentialTemplateRequest): unknown;
                fromPartial(object: DeepPartial<CreateCredentialTemplateRequest>): CreateCredentialTemplateRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: CreateCredentialTemplateResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): CreateCredentialTemplateResponse;
                fromJSON(object: any): CreateCredentialTemplateResponse;
                toJSON(message: CreateCredentialTemplateResponse): unknown;
                fromPartial(object: DeepPartial<CreateCredentialTemplateResponse>): CreateCredentialTemplateResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        /** Fetch a credential template by ID */
        readonly get: {
            readonly name: "Get";
            readonly requestType: {
                encode(message: GetCredentialTemplateRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetCredentialTemplateRequest;
                fromJSON(object: any): GetCredentialTemplateRequest;
                toJSON(message: GetCredentialTemplateRequest): unknown;
                fromPartial(object: DeepPartial<GetCredentialTemplateRequest>): GetCredentialTemplateRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: GetCredentialTemplateResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): GetCredentialTemplateResponse;
                fromJSON(object: any): GetCredentialTemplateResponse;
                toJSON(message: GetCredentialTemplateResponse): unknown;
                fromPartial(object: DeepPartial<GetCredentialTemplateResponse>): GetCredentialTemplateResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        /** Search credential templates using SQL, returning strongly-typed template data */
        readonly list: {
            readonly name: "List";
            readonly requestType: {
                encode(message: ListCredentialTemplatesRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): ListCredentialTemplatesRequest;
                fromJSON(object: any): ListCredentialTemplatesRequest;
                toJSON(message: ListCredentialTemplatesRequest): unknown;
                fromPartial(object: DeepPartial<ListCredentialTemplatesRequest>): ListCredentialTemplatesRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: ListCredentialTemplatesResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): ListCredentialTemplatesResponse;
                fromJSON(object: any): ListCredentialTemplatesResponse;
                toJSON(message: ListCredentialTemplatesResponse): unknown;
                fromPartial(object: DeepPartial<ListCredentialTemplatesResponse>): ListCredentialTemplatesResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        /** Search credential templates using SQL, returning raw JSON data */
        readonly search: {
            readonly name: "Search";
            readonly requestType: {
                encode(message: SearchCredentialTemplatesRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SearchCredentialTemplatesRequest;
                fromJSON(object: any): SearchCredentialTemplatesRequest;
                toJSON(message: SearchCredentialTemplatesRequest): unknown;
                fromPartial(object: DeepPartial<SearchCredentialTemplatesRequest>): SearchCredentialTemplatesRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(message: SearchCredentialTemplatesResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): SearchCredentialTemplatesResponse;
                fromJSON(object: any): SearchCredentialTemplatesResponse;
                toJSON(message: SearchCredentialTemplatesResponse): unknown;
                fromPartial(object: DeepPartial<SearchCredentialTemplatesResponse>): SearchCredentialTemplatesResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
        /** Delete a credential template from the current ecosystem by ID */
        readonly delete: {
            readonly name: "Delete";
            readonly requestType: {
                encode(message: DeleteCredentialTemplateRequest, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): DeleteCredentialTemplateRequest;
                fromJSON(object: any): DeleteCredentialTemplateRequest;
                toJSON(message: DeleteCredentialTemplateRequest): unknown;
                fromPartial(object: DeepPartial<DeleteCredentialTemplateRequest>): DeleteCredentialTemplateRequest;
            };
            readonly requestStream: false;
            readonly responseType: {
                encode(_: DeleteCredentialTemplateResponse, writer?: _m0.Writer): _m0.Writer;
                decode(input: _m0.Reader | Uint8Array, length?: number): DeleteCredentialTemplateResponse;
                fromJSON(_: any): DeleteCredentialTemplateResponse;
                toJSON(_: DeleteCredentialTemplateResponse): unknown;
                fromPartial(_: DeepPartial<DeleteCredentialTemplateResponse>): DeleteCredentialTemplateResponse;
            };
            readonly responseStream: false;
            readonly options: {};
        };
    };
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
