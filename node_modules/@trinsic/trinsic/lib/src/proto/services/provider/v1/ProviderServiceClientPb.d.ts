/**
 * @fileoverview gRPC-Web generated client stub for services.provider.v1
 * @enhanceable
 * @public
 */
import * as grpcWeb from "grpc-web";
import * as services_provider_v1_provider_pb from "../../../services/provider/v1/provider_pb";
export declare class ProviderClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoCreateEcosystem: any;
    createEcosystem(request: services_provider_v1_provider_pb.CreateEcosystemRequest, metadata: grpcWeb.Metadata | null): Promise<services_provider_v1_provider_pb.CreateEcosystemResponse>;
    createEcosystem(request: services_provider_v1_provider_pb.CreateEcosystemRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_provider_v1_provider_pb.CreateEcosystemResponse) => void): grpcWeb.ClientReadableStream<services_provider_v1_provider_pb.CreateEcosystemResponse>;
    methodInfoGenerateToken: any;
    generateToken(request: services_provider_v1_provider_pb.GenerateTokenRequest, metadata: grpcWeb.Metadata | null): Promise<services_provider_v1_provider_pb.GenerateTokenResponse>;
    generateToken(request: services_provider_v1_provider_pb.GenerateTokenRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_provider_v1_provider_pb.GenerateTokenResponse) => void): grpcWeb.ClientReadableStream<services_provider_v1_provider_pb.GenerateTokenResponse>;
    methodInfoInvite: any;
    invite(request: services_provider_v1_provider_pb.InviteRequest, metadata: grpcWeb.Metadata | null): Promise<services_provider_v1_provider_pb.InviteResponse>;
    invite(request: services_provider_v1_provider_pb.InviteRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_provider_v1_provider_pb.InviteResponse) => void): grpcWeb.ClientReadableStream<services_provider_v1_provider_pb.InviteResponse>;
    methodInfoInvitationStatus: any;
    invitationStatus(request: services_provider_v1_provider_pb.InvitationStatusRequest, metadata: grpcWeb.Metadata | null): Promise<services_provider_v1_provider_pb.InvitationStatusResponse>;
    invitationStatus(request: services_provider_v1_provider_pb.InvitationStatusRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_provider_v1_provider_pb.InvitationStatusResponse) => void): grpcWeb.ClientReadableStream<services_provider_v1_provider_pb.InvitationStatusResponse>;
}
