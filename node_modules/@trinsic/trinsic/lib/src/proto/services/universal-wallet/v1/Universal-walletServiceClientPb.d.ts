/**
 * @fileoverview gRPC-Web generated client stub for services.universalwallet.v1
 * @enhanceable
 * @public
 */
import * as grpcWeb from "grpc-web";
import * as services_universal$wallet_v1_universal$wallet_pb from "../../../services/universal-wallet/v1/universal-wallet_pb";
export declare class UniversalWalletClient {
    client_: grpcWeb.AbstractClientBase;
    hostname_: string;
    credentials_: null | {
        [index: string]: string;
    };
    options_: null | {
        [index: string]: any;
    };
    constructor(hostname: string, credentials?: null | {
        [index: string]: string;
    }, options?: null | {
        [index: string]: any;
    });
    methodInfoGetItem: any;
    getItem(request: services_universal$wallet_v1_universal$wallet_pb.GetItemRequest, metadata: grpcWeb.Metadata | null): Promise<services_universal$wallet_v1_universal$wallet_pb.GetItemResponse>;
    getItem(request: services_universal$wallet_v1_universal$wallet_pb.GetItemRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_universal$wallet_v1_universal$wallet_pb.GetItemResponse) => void): grpcWeb.ClientReadableStream<services_universal$wallet_v1_universal$wallet_pb.GetItemResponse>;
    methodInfoSearch: any;
    search(request: services_universal$wallet_v1_universal$wallet_pb.SearchRequest, metadata: grpcWeb.Metadata | null): Promise<services_universal$wallet_v1_universal$wallet_pb.SearchResponse>;
    search(request: services_universal$wallet_v1_universal$wallet_pb.SearchRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_universal$wallet_v1_universal$wallet_pb.SearchResponse) => void): grpcWeb.ClientReadableStream<services_universal$wallet_v1_universal$wallet_pb.SearchResponse>;
    methodInfoInsertItem: any;
    insertItem(request: services_universal$wallet_v1_universal$wallet_pb.InsertItemRequest, metadata: grpcWeb.Metadata | null): Promise<services_universal$wallet_v1_universal$wallet_pb.InsertItemResponse>;
    insertItem(request: services_universal$wallet_v1_universal$wallet_pb.InsertItemRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_universal$wallet_v1_universal$wallet_pb.InsertItemResponse) => void): grpcWeb.ClientReadableStream<services_universal$wallet_v1_universal$wallet_pb.InsertItemResponse>;
    methodInfoUpdateItem: any;
    updateItem(request: services_universal$wallet_v1_universal$wallet_pb.UpdateItemRequest, metadata: grpcWeb.Metadata | null): Promise<services_universal$wallet_v1_universal$wallet_pb.UpdateItemResponse>;
    updateItem(request: services_universal$wallet_v1_universal$wallet_pb.UpdateItemRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_universal$wallet_v1_universal$wallet_pb.UpdateItemResponse) => void): grpcWeb.ClientReadableStream<services_universal$wallet_v1_universal$wallet_pb.UpdateItemResponse>;
    methodInfoDeleteItem: any;
    deleteItem(request: services_universal$wallet_v1_universal$wallet_pb.DeleteItemRequest, metadata: grpcWeb.Metadata | null): Promise<services_universal$wallet_v1_universal$wallet_pb.DeleteItemResponse>;
    deleteItem(request: services_universal$wallet_v1_universal$wallet_pb.DeleteItemRequest, metadata: grpcWeb.Metadata | null, callback: (err: grpcWeb.Error, response: services_universal$wallet_v1_universal$wallet_pb.DeleteItemResponse) => void): grpcWeb.ClientReadableStream<services_universal$wallet_v1_universal$wallet_pb.DeleteItemResponse>;
}
