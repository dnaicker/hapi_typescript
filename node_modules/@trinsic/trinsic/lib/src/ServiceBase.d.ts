import { ServiceOptions } from "./proto";
import { Metadata } from "nice-grpc-common";
import { Client as BrowserClient, CompatServiceDefinition as ClientServiceDefinition } from "nice-grpc-web";
import { ITokenProvider } from "./TokenProvider";
import { IPlatformProvider } from "./IPlatformProvider";
export default abstract class ServiceBase {
    static trinsicProvider: IPlatformProvider;
    options: ServiceOptions;
    tokenProvider: ITokenProvider;
    protected constructor(options?: ServiceOptions);
    static setProvider(provider: IPlatformProvider): void;
    buildMetadata(request?: Uint8Array): Promise<Metadata>;
    setAuthToken(token: string): void;
    protected createClient<ClientService extends ClientServiceDefinition>(definition: ClientService): BrowserClient<ClientService>;
}
