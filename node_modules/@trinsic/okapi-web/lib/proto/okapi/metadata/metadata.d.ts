import _m0 from "protobufjs/minimal";
/** Request custom metadata about the native okapi binaries - cannot get cargo env vars at runtime */
export interface MetadataRequest {
}
/** Metadata information about the native okapi binaries. Always returns the version information */
export interface MetadataResponse {
    /** The full version string from okapi */
    version: string;
    /** Major version */
    versionMajor: number;
    /** Minor version */
    versionMinor: number;
    /** Patch release version */
    versionPatch: number;
    /** https://doc.rust-lang.org/cargo/reference/environment-variables.html#environment-variables-cargo-sets-for-crates */
    targetFamily: string;
    targetOs: string;
    targetArch: string;
    targetVendor: string;
    targetEnv: string;
}
export declare const MetadataRequest: {
    encode(_: MetadataRequest, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MetadataRequest;
    fromJSON(_: any): MetadataRequest;
    toJSON(_: MetadataRequest): unknown;
    fromPartial(_: DeepPartial<MetadataRequest>): MetadataRequest;
};
export declare const MetadataResponse: {
    encode(message: MetadataResponse, writer?: _m0.Writer): _m0.Writer;
    decode(input: _m0.Reader | Uint8Array, length?: number): MetadataResponse;
    fromJSON(object: any): MetadataResponse;
    toJSON(message: MetadataResponse): unknown;
    fromPartial(object: DeepPartial<MetadataResponse>): MetadataResponse;
};
declare type Builtin = Date | Function | Uint8Array | string | number | boolean | undefined;
declare type DeepPartial<T> = T extends Builtin ? T : T extends Array<infer U> ? Array<DeepPartial<U>> : T extends ReadonlyArray<infer U> ? ReadonlyArray<DeepPartial<U>> : T extends {} ? {
    [K in keyof T]?: DeepPartial<T[K]>;
} : Partial<T>;
export {};
